name: Deploy to Google Cloud Run (Simple)

on:
  push:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  SERVICE_NAME: cfpb-comment-builder
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker
      run: gcloud auth configure-docker

    - name: Build and push Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA .
        docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: ${{ env.SERVICE_NAME }}
        region: ${{ env.REGION }}
        image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE_NAME }}:${{ github.sha }}
        env_vars: |
          NODE_ENV=production
          PORT=8080
          BQ_PROJECT_ID=${{ secrets.BQ_PROJECT_ID }}
          BQ_TYPE=${{ secrets.BQ_TYPE }}
          BQ_PRIVATE_KEY_ID=${{ secrets.BQ_PRIVATE_KEY_ID }}
          BQ_PRIVATE_KEY=${{ secrets.BQ_PRIVATE_KEY }}
          BQ_CLIENT_EMAIL=${{ secrets.BQ_CLIENT_EMAIL }}
          BQ_CLIENT_ID=${{ secrets.BQ_CLIENT_ID }}
          BQ_AUTH_URI=${{ secrets.BQ_AUTH_URI }}
          BQ_TOKEN_URI=${{ secrets.BQ_TOKEN_URI }}
          BQ_AUTH_PROVIDER_X509_CERT_URL=${{ secrets.BQ_AUTH_PROVIDER_X509_CERT_URL }}
          BQ_CLIENT_X509_CERT_URL=${{ secrets.BQ_CLIENT_X509_CERT_URL }}
          BIGQUERY_DATASET=${{ secrets.BIGQUERY_DATASET }}
          CLAUDE_API_KEY=${{ secrets.CLAUDE_API_KEY }}
          CLAUDE_MODEL=${{ secrets.CLAUDE_MODEL }}
          RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }}
          RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}
          CLIENT_URL=${{ secrets.CLIENT_URL }}
        flags: |
          --allow-unauthenticated
          --memory=1Gi
          --cpu=1
          --max-instances=10
          --min-instances=0
          --concurrency=80
          --timeout=300

    - name: Show Output
      run: echo ${{ steps.deploy.outputs.url }}

    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'ðŸš€ Deployment successful! Preview: ${{ steps.deploy.outputs.url }}'
          })
